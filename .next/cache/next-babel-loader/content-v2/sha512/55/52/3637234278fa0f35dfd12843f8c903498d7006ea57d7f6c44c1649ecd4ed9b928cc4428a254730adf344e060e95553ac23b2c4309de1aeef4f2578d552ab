{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/anime_website/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/workspaces/anime_website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MyAction } from \"./actions\";\n\nvar fetchData = function fetchData() {\n  return {\n    type: MyAction.FETCH\n  };\n};\n\nvar recieveData = function recieveData(payload) {\n  return {\n    type: MyAction.RECEIVE,\n    payload: payload\n  };\n};\n\nexport var asyncDataAction = function asyncDataAction(URL) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(fetchData());\n              console.log(URL);\n              _context.next = 4;\n              return fetch(URL);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              result = _context.sent;\n              dispatch(recieveData(result));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/workspaces/anime_website/redux/actions/asyncDataAction.js"],"names":["MyAction","fetchData","type","FETCH","recieveData","payload","RECEIVE","asyncDataAction","URL","dispatch","console","log","fetch","response","json","result"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,WAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAO;AAAEC,IAAAA,IAAI,EAAEF,QAAQ,CAACG;AAAjB,GAAP;AACD,CAFD;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAa;AAC/B,SAAO;AAAEH,IAAAA,IAAI,EAAEF,QAAQ,CAACM,OAAjB;AAA0BD,IAAAA,OAAO,EAAEA;AAAnC,GAAP;AACD,CAFD;;AAIA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AACtC;AAAA,wEAAO,iBAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACAS,cAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAFK;AAAA,qBAGkBI,KAAK,CAACJ,GAAD,CAHvB;;AAAA;AAGCK,cAAAA,QAHD;AAAA;AAAA,qBAIgBA,QAAQ,CAACC,IAAT,EAJhB;;AAAA;AAICC,cAAAA,MAJD;AAKLN,cAAAA,QAAQ,CAACL,WAAW,CAACW,MAAD,CAAZ,CAAR;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAOD,CARM","sourcesContent":["import { MyAction } from \"./actions\";\n\nconst fetchData = () => {\n  return { type: MyAction.FETCH };\n};\nconst recieveData = (payload) => {\n  return { type: MyAction.RECEIVE, payload: payload };\n};\n\nexport const asyncDataAction = (URL) => {\n  return async function (dispatch) {\n    dispatch(fetchData());\n    console.log(URL);\n    const response = await fetch(URL);\n    const result = await response.json();\n    dispatch(recieveData(result));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}