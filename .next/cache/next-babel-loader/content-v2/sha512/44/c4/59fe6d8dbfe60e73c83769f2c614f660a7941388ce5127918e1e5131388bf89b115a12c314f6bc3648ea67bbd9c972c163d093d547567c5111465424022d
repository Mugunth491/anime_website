{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspaces/anime_website/components/nav/Toggle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDark, toggleLight } from \"../../redux/actions/themeAction\";\nexport default function Toggle() {\n  _s();\n\n  var _useState = useState(function () {\n    return true;\n  }),\n      isDarkMode = _useState[0],\n      setIsDarkMode = _useState[1];\n\n  var theme = useSelector(function (state) {\n    return state.theme;\n  });\n  useEffect(function () {\n    if (theme.theme == \"dark\") {\n      setIsDarkMode(true);\n    } else {\n      setIsDarkMode(false);\n    }\n  }, [theme]);\n  var dispatch = useDispatch();\n\n  function checkToggle() {\n    isDarkMode ? [dispatch(toggleLight()), setIsDarkMode(false)] : [dispatch(toggleDark()), setIsDarkMode(true)];\n  }\n\n  return /*#__PURE__*/_jsxDEV(DarkModeToggle, {\n    onChange: function onChange() {\n      checkToggle();\n    },\n    checked: isDarkMode,\n    size: 50\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toggle, \"0zfc2XK+0SILPbAepUi8msRc8jM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["/workspaces/anime_website/components/nav/Toggle.js"],"names":["React","useEffect","useState","DarkModeToggle","useDispatch","useSelector","toggleDark","toggleLight","Toggle","isDarkMode","setIsDarkMode","theme","state","dispatch","checkToggle"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iCAAxC;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBACKN,QAAQ,CAAC;AAAA,WAAM,IAAN;AAAA,GAAD,CADb;AAAA,MACxBO,UADwB;AAAA,MACZC,aADY;;AAE/B,MAAMC,KAAK,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACD,KAAjB;AAAA,GAAD,CAAzB;AACAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,KAAK,CAACA,KAAN,IAAe,MAAnB,EAA2B;AACzBD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GANQ,EAMN,CAACC,KAAD,CANM,CAAT;AAOA,MAAME,QAAQ,GAAGT,WAAW,EAA5B;;AACA,WAASU,WAAT,GAAuB;AACrBL,IAAAA,UAAU,GACN,CAACI,QAAQ,CAACN,WAAW,EAAZ,CAAT,EAA0BG,aAAa,CAAC,KAAD,CAAvC,CADM,GAEN,CAACG,QAAQ,CAACP,UAAU,EAAX,CAAT,EAAyBI,aAAa,CAAC,IAAD,CAAtC,CAFJ;AAGD;;AACD,sBACE,QAAC,cAAD;AACE,IAAA,QAAQ,EAAE,oBAAM;AACdI,MAAAA,WAAW;AACZ,KAHH;AAIE,IAAA,OAAO,EAAEL,UAJX;AAKE,IAAA,IAAI,EAAE;AALR;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBuBD,M;UAERH,W,EAQGD,W;;;KAVKI,M","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDark, toggleLight } from \"../../redux/actions/themeAction\";\nexport default function Toggle() {\n  const [isDarkMode, setIsDarkMode] = useState(() => true);\n  const theme = useSelector((state) => state.theme);\n  useEffect(() => {\n    if (theme.theme == \"dark\") {\n      setIsDarkMode(true);\n    } else {\n      setIsDarkMode(false);\n    }\n  }, [theme]);\n  const dispatch = useDispatch();\n  function checkToggle() {\n    isDarkMode\n      ? [dispatch(toggleLight()), setIsDarkMode(false)]\n      : [dispatch(toggleDark()), setIsDarkMode(true)];\n  }\n  return (\n    <DarkModeToggle\n      onChange={() => {\n        checkToggle();\n      }}\n      checked={isDarkMode}\n      size={50}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}